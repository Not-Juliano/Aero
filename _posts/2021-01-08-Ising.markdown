---
title:  "Ising Model"
date:   2021-01-08 15:04:23
categories: [Statistical Mechanics]
tags: [Ising]
---
The Ising model is an example of a Canonical ensemble in thermodynamics. In most cases; It’s used to theoretically describe ferromagnetism, and used for phase transitions.
The model was invented by Wilhelm Lenz in 1920 and is named after Ernst Ising who solved it in 1D [source](http://farside.ph.utexas.edu/teaching/329/lectures/node110.html)
The model has gained the love of some physicist because it applies to many areas and it allows computations of thermodynamic quantities in a system. (Energy, Specific heat, Entropy ect.)


So how does the model work? In essence you can break this ensemble down into three main parts. A hamiltonian, Spin dynamics, and phase transitions.
The Equation is shown below:

<a href="https://www.codecogs.com/eqnedit.php?latex={\color{Blue}&space;\boldsymbol{H}=\sum_{ij}^{}\boldsymbol{J}_{ij}\boldsymbol{\sigma_{i}}\boldsymbol{\sigma_{j}}-\sum_{i}^{}\boldsymbol{h}_{i}\boldsymbol{\sigma_{i}}}" target="_blank"><img src="https://latex.codecogs.com/svg.latex?{\color{Blue}&space;\boldsymbol{H}=\sum_{ij}^{}\boldsymbol{J}_{ij}\boldsymbol{\sigma_{i}}\boldsymbol{\sigma_{j}}-\sum_{i}^{}\boldsymbol{h}_{i}\boldsymbol{\sigma_{i}}}" title="{\color{Blue} \boldsymbol{H}=\sum_{ij}^{}\boldsymbol{J}_{ij}\boldsymbol{\sigma_{i}}\boldsymbol{\sigma_{j}}-\sum_{i}^{}\boldsymbol{h}_{i}\boldsymbol{\sigma_{i}}}" /></a>



J is the coupling strength. (How strongly these things interact). 

σ represents each spin. 

h is the external magnetic field
#

J also tells you how these things prefer to align.

When J>0, the spin wants to be like neighbors- making this interaction ferromagnetic 
#

![Ferro](/images/Ferromagnetic.png)

#
When J<0, the spin wants to be unlike it's neighbors- making this interaction Antiferromagnetic
#

![Antiferro](/images/Antiferromagnetic.png)


#
For every spin, if the change in the Hamiltonian is favorable for the system (Meaning Energy<=0) Switch the spin, Or else switch this spin by a probability.

Probability is given by  the boltzmann factor: exp(-ΔE/kT) and Spins are given by their states, where up is +1, down is -1.

When h=0 the hamiltonian is written as: H= -J (Chosen Spin * Σ Neighbors )

Here's an example of a single spin calculation:
#

![Spins](/images/SpinCalculations.png)

#

With this we now have enough information to move onto the coding.

First the imports. 
``` python
#Imports
#pip install Pillow
#pip install ipywidgets

import numpy as np
from math import exp, log, e, sqrt
from ipywidgets import interact
from PIL import Image
import matplotlib.pyplot as plt
from plotly.subplots import make_subplots
import plotly.graph_objects as go
from ipywidgets import interact
```
Next we focus on creating a grid that a user can input values into. Each point on this grid or lattice can be considered a particle with a spin.
``` python
N=int(input('What is the length of one side of your grid?')) #Eg 50 makes a 50x50 grid
M=N #Grid is even. playing with an uneven grid might be fun.

J=int(input('What is the Coupling constant? 1 is most common. '))

kT= float(input('What is your Temperature from 0~6? For critical temperature type 22  '))

if kT==22:
    
    kT = 2 / log(1 + sqrt(2), e)#critical temp from Lars Onsangers solution
    
    print('Critical temperature is given as 2 / log(1 + sqrt(2), e), or', kT, 'and will be used for this system. ')

Mag=[]#Places to store magnetization  values
Energy=[] #Places to store energy values
```
